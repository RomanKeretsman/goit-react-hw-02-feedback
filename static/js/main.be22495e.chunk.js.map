{"version":3,"sources":["components/Statistics/Statistics.module.scss","components/FeedbackOptions/FeedbackOptions.module.scss","components/Section/Section.module.scss","components/Notification/Notification.module.scss","components/Container/Container.module.scss","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","components/Container/Container.jsx","App.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","className","styles","feedbackBtnWrapper","map","option","type","feedbackBtn","name","toLowerCase","onClick","event","randomID","Statistics","good","neutral","bad","total","positiveStats","positivePercentage","statisticsList","statisticsItem","statisticsText","Section","title","children","sectionTitle","Notification","message","notificationText","Container","container","App","state","addFeedback","target","setState","countTotalFeedback","Object","values","reduce","acc","val","countPositiveFeedbackPercentage","percentage","Math","round","isNaN","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be22495e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticsList\":\"Statistics_statisticsList__3g7Kq\",\"statisticsItem\":\"Statistics_statisticsItem__MrKnz\",\"statisticsText\":\"Statistics_statisticsText__236Lu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackBtnWrapper\":\"FeedbackOptions_feedbackBtnWrapper__3Q7JN\",\"feedbackBtn\":\"FeedbackOptions_feedbackBtn__17ASu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Section_Section__1qehq\",\"sectionTitle\":\"Section_sectionTitle__Dojz2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notificationText\":\"Notification_notificationText__LmUe9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__29568\"};","import PropTypes from 'prop-types';\r\nimport styles from './FeedbackOptions.module.scss';\r\nimport { v4 as randomID } from 'uuid';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\r\n  <div className={styles.feedbackBtnWrapper}>\r\n    {options.map(option => (\r\n      <button\r\n        key={randomID()}\r\n        type=\"button\"\r\n        className={styles.feedbackBtn}\r\n        name={option.toLowerCase()}\r\n        onClick={event => {\r\n          onLeaveFeedback(event);\r\n        }}\r\n      >\r\n        {option}\r\n      </button>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from 'prop-types';\r\nimport { v4 as randomID } from 'uuid';\r\nimport styles from './Statistics.module.scss';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  const positiveStats = positivePercentage();\r\n  return (\r\n    <ul className={styles.statisticsList}>\r\n      <li key={randomID()} className={styles.statisticsItem}>\r\n        <span className={styles.statisticsText}>Good: {good}</span>\r\n      </li>\r\n      <li key={randomID()} className={styles.statisticsItem}>\r\n        <span className={styles.statisticsText}>Neutral: {neutral}</span>\r\n      </li>\r\n      <li key={randomID()} className={styles.statisticsItem}>\r\n        <span className={styles.statisticsText}>Bad: {bad}</span>\r\n      </li>\r\n      <li key={randomID()} className={styles.statisticsItem}>\r\n        <span className={styles.statisticsText}>Total: {total()}</span>\r\n      </li>\r\n      <li key={randomID()} className={styles.statisticsItem}>\r\n        <span className={styles.statisticsText}>\r\n          Positive feedback: {positiveStats}%\r\n        </span>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.func.isRequired,\r\n  positivePercentage: PropTypes.func.isRequired,\r\n};\r\nexport default Statistics;\r\n","import PropTypes from 'prop-types';\r\nimport styles from './Section.module.scss';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section className={styles.Section}>\r\n    <h2 className={styles.sectionTitle}>{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;\r\n","import PropTypes from 'prop-types';\r\nimport styles from './Notification.module.scss'\r\n\r\nconst Notification = ({ message }) => (\r\n  <p className={styles.notificationText}>{message}</p>\r\n);\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n\r\nexport default Notification;\r\n","import PropTypes from 'prop-types';\r\nimport styles from './Container.module.scss';\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={styles.container}>{children}</div>\r\n);\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Container;\r\n","import { Component } from 'react';\n\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Statistics from './components/Statistics';\nimport Section from './components/Section';\nimport Notification from './components/Notification';\nimport Container from './components/Container';\n\n\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  addFeedback = event => {\n    const { name } = event.target;\n\n    this.setState({ [name]: this.state[name] + 1 });\n  };\n\n  countTotalFeedback = () => {\n    return Object.values(this.state).reduce((acc, val) => {\n      return acc + val;\n    }, 0);\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const good = this.state.good;\n    const total = this.countTotalFeedback();\n    const percentage = Math.round((good / total) * 100);\n    return isNaN(percentage) ? 0 : percentage;\n  };\n\n  render() {\n    const options = ['Good', 'Neutral', 'Bad'];\n    const { good, neutral, bad } = this.state;\n    const message = 'No feedback given';\n    const {\n      countTotalFeedback,\n      countPositiveFeedbackPercentage,\n      addFeedback,\n    } = this;\n    return (\n      <Container>\n        <Section title=\"Leave your feedback\">\n          <FeedbackOptions options={options} onLeaveFeedback={addFeedback} />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() > 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={countTotalFeedback}\n              positivePercentage={countPositiveFeedbackPercentage}\n            />\n          ) : (\n            <Notification message={message} />\n          )}\n        </Section>\n      </Container>\n    );\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.scss';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}